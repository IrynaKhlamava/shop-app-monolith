2025-03-19 12:26:02 INFO  c.example.lamashop.filter.JwtFilter - Incoming request: GET /api/products
2025-03-19 12:26:02 INFO  c.example.lamashop.filter.JwtFilter - Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2Q4M2JmOWI3ZTBhZjQxMWZmNWIxOGIiLCJpYXQiOjE3NDIzODM0NTYsImV4cCI6MTc0MjM4NDA1Nn0.bjxS8JKuKXcinXahLPVxTLews2OrD2KLStYNQqoK4HY
2025-03-19 12:26:02 INFO  c.e.lamashop.service.JwtService - Validating token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2Q4M2JmOWI3ZTBhZjQxMWZmNWIxOGIiLCJpYXQiOjE3NDIzODM0NTYsImV4cCI6MTc0MjM4NDA1Nn0.bjxS8JKuKXcinXahLPVxTLews2OrD2KLStYNQqoK4HY
2025-03-19 12:26:02 INFO  c.e.lamashop.service.JwtService - Token is valid
2025-03-19 12:26:02 INFO  c.example.lamashop.filter.JwtFilter - User ID from token: 67d83bf9b7e0af411ff5b18b
2025-03-19 12:26:02 INFO  c.example.lamashop.filter.JwtFilter - User authenticated successfully: 67d83bf9b7e0af411ff5b18b
2025-03-19 12:26:02 INFO  c.e.lamashop.service.ProductService - Get all products
2025-03-19 12:27:06 INFO  c.example.lamashop.filter.JwtFilter - Incoming request: GET /api/cart/67d83bf9b7e0af411ff5b18b
2025-03-19 12:27:06 INFO  c.example.lamashop.filter.JwtFilter - Extracted token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2Q4M2JmOWI3ZTBhZjQxMWZmNWIxOGIiLCJpYXQiOjE3NDIzODM0NTYsImV4cCI6MTc0MjM4NDA1Nn0.bjxS8JKuKXcinXahLPVxTLews2OrD2KLStYNQqoK4HY
2025-03-19 12:27:06 INFO  c.e.lamashop.service.JwtService - Validating token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2Q4M2JmOWI3ZTBhZjQxMWZmNWIxOGIiLCJpYXQiOjE3NDIzODM0NTYsImV4cCI6MTc0MjM4NDA1Nn0.bjxS8JKuKXcinXahLPVxTLews2OrD2KLStYNQqoK4HY
2025-03-19 12:27:06 INFO  c.e.lamashop.service.JwtService - Token is valid
2025-03-19 12:27:06 INFO  c.example.lamashop.filter.JwtFilter - User ID from token: 67d83bf9b7e0af411ff5b18b
2025-03-19 12:27:06 INFO  c.example.lamashop.filter.JwtFilter - User authenticated successfully: 67d83bf9b7e0af411ff5b18b
2025-03-19 12:27:06 INFO  c.e.lamashop.service.ProductService - Get product with id: 67cb18ebefb82f58357604e6
2025-03-19 12:27:06 INFO  c.e.lamashop.service.ProductService - Get product with id: 67cec41e69b5ba537d7abfb5
2025-03-19 12:45:38 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-03-19 12:45:38 INFO  c.e.lamashop.LamaShopApplication - Starting LamaShopApplication using Java 17.0.6 with PID 20460 (D:\java\lama-shop\build\classes\java\main started by iryna in D:\java\lama-shop)
2025-03-19 12:45:38 INFO  c.e.lamashop.LamaShopApplication - No active profile set, falling back to 1 default profile: "default"
2025-03-19 12:45:39 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-19 12:45:39 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-03-19 12:45:39 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 96 ms. Found 3 MongoDB repository interfaces.
2025-03-19 12:45:39 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-19 12:45:39 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-19 12:45:39 INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.lamashop.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-19 12:45:39 INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.lamashop.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-19 12:45:39 INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.lamashop.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-19 12:45:39 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2025-03-19 12:45:39 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-03-19 12:45:39 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-19 12:45:39 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-03-19 12:45:39 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.36]
2025-03-19 12:45:39 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-19 12:45:39 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 919 ms
2025-03-19 12:45:40 INFO  org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.2.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/JetBrains s.r.o./17.0.6+10-b829.5"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@58636b50, com.mongodb.Jep395RecordCodecProvider@7f4f1536, com.mongodb.KotlinCodecProvider@1ad1b737]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-03-19 12:45:40 INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19972699, minRoundTripTimeNanos=0}
2025-03-19 12:45:40 INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-03-19 12:45:40 WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-03-19 12:45:40 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-03-19 12:45:40 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-03-19 12:45:40 INFO  c.e.lamashop.LamaShopApplication - Started LamaShopApplication in 2.27 seconds (process running for 2.769)
